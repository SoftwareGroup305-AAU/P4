//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AntlrCSharp/Grammar/C.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

namespace P4.TinyCell.AntlrGenerated;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ICListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDocument([NotNull] CParser.DocumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDocument([NotNull] CParser.DocumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.generaldeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneraldeclaration([NotNull] CParser.GeneraldeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.generaldeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneraldeclaration([NotNull] CParser.GeneraldeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.functiondefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctiondefinition([NotNull] CParser.FunctiondefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.functiondefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctiondefinition([NotNull] CParser.FunctiondefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.funcitondefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncitondefinition([NotNull] CParser.FuncitondefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.funcitondefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncitondefinition([NotNull] CParser.FuncitondefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] CParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] CParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.conditionalexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalexpression([NotNull] CParser.ConditionalexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.conditionalexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalexpression([NotNull] CParser.ConditionalexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.logicalorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalorexpression([NotNull] CParser.LogicalorexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.logicalorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalorexpression([NotNull] CParser.LogicalorexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.logicalandexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalandexpression([NotNull] CParser.LogicalandexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.logicalandexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalandexpression([NotNull] CParser.LogicalandexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.inclusiveorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclusiveorexpression([NotNull] CParser.InclusiveorexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.inclusiveorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclusiveorexpression([NotNull] CParser.InclusiveorexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.exclusiveorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusiveorexpression([NotNull] CParser.ExclusiveorexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.exclusiveorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusiveorexpression([NotNull] CParser.ExclusiveorexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.andexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndexpression([NotNull] CParser.AndexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.andexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndexpression([NotNull] CParser.AndexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.equalityexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityexpression([NotNull] CParser.EqualityexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.equalityexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityexpression([NotNull] CParser.EqualityexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.relationalexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalexpression([NotNull] CParser.RelationalexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.relationalexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalexpression([NotNull] CParser.RelationalexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.bitshiftexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitshiftexpression([NotNull] CParser.BitshiftexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.bitshiftexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitshiftexpression([NotNull] CParser.BitshiftexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.additiveexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveexpression([NotNull] CParser.AdditiveexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.additiveexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveexpression([NotNull] CParser.AdditiveexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.multiplicativeexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeexpression([NotNull] CParser.MultiplicativeexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.multiplicativeexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeexpression([NotNull] CParser.MultiplicativeexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.castexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastexpression([NotNull] CParser.CastexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.castexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastexpression([NotNull] CParser.CastexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypename([NotNull] CParser.TypenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypename([NotNull] CParser.TypenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.unaryexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryexpression([NotNull] CParser.UnaryexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.unaryexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryexpression([NotNull] CParser.UnaryexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.postfixexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfixexpression([NotNull] CParser.PostfixexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.postfixexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfixexpression([NotNull] CParser.PostfixexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.primaryexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryexpression([NotNull] CParser.PrimaryexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.primaryexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryexpression([NotNull] CParser.PrimaryexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.assignmentexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentexpression([NotNull] CParser.AssignmentexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.assignmentexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentexpression([NotNull] CParser.AssignmentexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.assignmentoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentoperator([NotNull] CParser.AssignmentoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.assignmentoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentoperator([NotNull] CParser.AssignmentoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.unaryoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryoperator([NotNull] CParser.UnaryoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.unaryoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryoperator([NotNull] CParser.UnaryoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.parameterlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterlist([NotNull] CParser.ParameterlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.parameterlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterlist([NotNull] CParser.ParameterlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] CParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] CParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.parameterdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterdeclaration([NotNull] CParser.ParameterdeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.parameterdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterdeclaration([NotNull] CParser.ParameterdeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] CParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] CParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.initialdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitialdeclarator([NotNull] CParser.InitialdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.initialdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitialdeclarator([NotNull] CParser.InitialdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializer([NotNull] CParser.InitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializer([NotNull] CParser.InitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.initializerlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializerlist([NotNull] CParser.InitializerlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.initializerlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializerlist([NotNull] CParser.InitializerlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.compoundstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundstatement([NotNull] CParser.CompoundstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.compoundstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundstatement([NotNull] CParser.CompoundstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.labeledstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeledstatement([NotNull] CParser.LabeledstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.labeledstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeledstatement([NotNull] CParser.LabeledstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.expressionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionstatement([NotNull] CParser.ExpressionstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.expressionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionstatement([NotNull] CParser.ExpressionstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.selectionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectionstatement([NotNull] CParser.SelectionstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.selectionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectionstatement([NotNull] CParser.SelectionstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.iterationstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIterationstatement([NotNull] CParser.IterationstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.iterationstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIterationstatement([NotNull] CParser.IterationstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CParser.jumpstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpstatement([NotNull] CParser.JumpstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CParser.jumpstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpstatement([NotNull] CParser.JumpstatementContext context);
}
