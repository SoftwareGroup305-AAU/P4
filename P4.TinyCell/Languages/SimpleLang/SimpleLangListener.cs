//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from P4.TinyCell/SimpleLang/SimpleLang.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SimpleLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ISimpleLangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] SimpleLangParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] SimpleLangParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl([NotNull] SimpleLangParser.DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl([NotNull] SimpleLangParser.DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] SimpleLangParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] SimpleLangParser.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDecl([NotNull] SimpleLangParser.FunctionDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDecl([NotNull] SimpleLangParser.FunctionDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStat([NotNull] SimpleLangParser.StatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStat([NotNull] SimpleLangParser.StatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.exprStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprStat([NotNull] SimpleLangParser.ExprStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.exprStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprStat([NotNull] SimpleLangParser.ExprStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.ifStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStat([NotNull] SimpleLangParser.IfStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.ifStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStat([NotNull] SimpleLangParser.IfStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.whileStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStat([NotNull] SimpleLangParser.WhileStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.whileStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStat([NotNull] SimpleLangParser.WhileStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.returnStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStat([NotNull] SimpleLangParser.ReturnStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.returnStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStat([NotNull] SimpleLangParser.ReturnStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.pinWriteStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPinWriteStat([NotNull] SimpleLangParser.PinWriteStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.pinWriteStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPinWriteStat([NotNull] SimpleLangParser.PinWriteStatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parens</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParens([NotNull] SimpleLangParser.ParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parens</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParens([NotNull] SimpleLangParser.ParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>intLit</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntLit([NotNull] SimpleLangParser.IntLitContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intLit</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntLit([NotNull] SimpleLangParser.IntLitContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcCall</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncCall([NotNull] SimpleLangParser.FuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcCall</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncCall([NotNull] SimpleLangParser.FuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>id</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] SimpleLangParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>id</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] SimpleLangParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>binOp</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinOp([NotNull] SimpleLangParser.BinOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>binOp</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinOp([NotNull] SimpleLangParser.BinOpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assign</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign([NotNull] SimpleLangParser.AssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assign</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign([NotNull] SimpleLangParser.AssignContext context);
}
